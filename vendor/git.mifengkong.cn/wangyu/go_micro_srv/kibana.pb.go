// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kibana.proto

package go_micro_srv_client

import (
	context "golang.org/x/net/context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WriteRequest struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Level                string   `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc2f5dd9b5f9ba37, []int{0}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *WriteRequest) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *WriteRequest) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

type WriteResponse struct {
	Code                 int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WriteResponse) Reset()         { *m = WriteResponse{} }
func (m *WriteResponse) String() string { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()    {}
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc2f5dd9b5f9ba37, []int{1}
}

func (m *WriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponse.Unmarshal(m, b)
}
func (m *WriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponse.Marshal(b, m, deterministic)
}
func (m *WriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponse.Merge(m, src)
}
func (m *WriteResponse) XXX_Size() int {
	return xxx_messageInfo_WriteResponse.Size(m)
}
func (m *WriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponse proto.InternalMessageInfo

func (m *WriteResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *WriteResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *WriteResponse) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*WriteRequest)(nil), "kibana.WriteRequest")
	proto.RegisterType((*WriteResponse)(nil), "kibana.WriteResponse")
	proto.RegisterMapType((map[string]string)(nil), "kibana.WriteResponse.DataEntry")
}

func init() { proto.RegisterFile("kibana.proto", fileDescriptor_fc2f5dd9b5f9ba37) }

var fileDescriptor_fc2f5dd9b5f9ba37 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0xc1, 0x4e, 0x83, 0x40,
	0x14, 0x0c, 0x50, 0x30, 0x7d, 0xd6, 0xa4, 0xd9, 0xb4, 0x09, 0x41, 0x13, 0x1b, 0x4e, 0x8d, 0x07,
	0x88, 0xed, 0x41, 0xd3, 0xb3, 0x5e, 0xf4, 0x24, 0x17, 0x0f, 0x9e, 0x5e, 0xed, 0x93, 0x10, 0x70,
	0x17, 0xd9, 0x2d, 0x86, 0xab, 0xbf, 0xe0, 0x67, 0xf8, 0x39, 0xfe, 0x82, 0x1f, 0x62, 0x78, 0x80,
	0x89, 0xc6, 0xdb, 0xcc, 0x64, 0x76, 0x66, 0xf6, 0xc1, 0x24, 0xcf, 0xb6, 0x28, 0x31, 0x2a, 0x2b,
	0x65, 0x94, 0xf0, 0x3a, 0x16, 0x9c, 0xa4, 0x4a, 0xa5, 0x05, 0xc5, 0x58, 0x66, 0x31, 0x4a, 0xa9,
	0x0c, 0x9a, 0x4c, 0x49, 0xdd, 0xb9, 0xc2, 0x1b, 0x98, 0xdc, 0x57, 0x99, 0xa1, 0x84, 0x5e, 0xf6,
	0xa4, 0x8d, 0x98, 0x82, 0x63, 0x30, 0xf5, 0xad, 0x85, 0xb5, 0x1c, 0x27, 0x2d, 0x14, 0x02, 0x46,
	0x99, 0x7c, 0x52, 0xbe, 0xcd, 0x12, 0x63, 0x31, 0x03, 0xb7, 0xa0, 0x9a, 0x0a, 0xdf, 0x61, 0xb1,
	0x23, 0xe1, 0x87, 0x05, 0x47, 0x7d, 0x98, 0x2e, 0x95, 0xd4, 0xd4, 0xbe, 0x7d, 0x54, 0x3b, 0xe2,
	0x38, 0x37, 0x61, 0x2c, 0x7c, 0x38, 0x78, 0x26, 0xad, 0x31, 0xa5, 0x3e, 0x72, 0xa0, 0x62, 0x0d,
	0xa3, 0x1d, 0x1a, 0xf4, 0x9d, 0x85, 0xb3, 0x3c, 0x5c, 0x9d, 0x46, 0xfd, 0x77, 0x7e, 0x45, 0x46,
	0x57, 0x68, 0xf0, 0x5a, 0x9a, 0xaa, 0x49, 0xd8, 0x1c, 0x5c, 0xc0, 0xf8, 0x47, 0x6a, 0xd7, 0xe7,
	0xd4, 0x0c, 0xeb, 0x73, 0x6a, 0xda, 0xa5, 0x35, 0x16, 0xfb, 0xa1, 0xab, 0x23, 0x1b, 0xfb, 0xd2,
	0x5a, 0x3d, 0x80, 0x77, 0xcb, 0x05, 0xe2, 0x0e, 0x5c, 0xee, 0x10, 0xb3, 0x3f, 0x95, 0x7c, 0x92,
	0x60, 0xfe, 0xef, 0x90, 0xf0, 0xf8, 0xed, 0xf3, 0xeb, 0xdd, 0x9e, 0x87, 0xd3, 0xb8, 0x3e, 0x8f,
	0x3b, 0x47, 0xfc, 0xda, 0x3a, 0x36, 0xd6, 0xd9, 0xd6, 0xe3, 0xeb, 0xae, 0xbf, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x2d, 0xd9, 0xea, 0x8c, 0x93, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KibanaClient is the client API for Kibana service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KibanaClient interface {
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error)
}

type kibanaClient struct {
	cc *grpc.ClientConn
}

func NewKibanaClient(cc *grpc.ClientConn) KibanaClient {
	return &kibanaClient{cc}
}

func (c *kibanaClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := c.cc.Invoke(ctx, "/kibana.Kibana/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KibanaServer is the server API for Kibana service.
type KibanaServer interface {
	Write(context.Context, *WriteRequest) (*WriteResponse, error)
}

func RegisterKibanaServer(s *grpc.Server, srv KibanaServer) {
	s.RegisterService(&_Kibana_serviceDesc, srv)
}

func _Kibana_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KibanaServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kibana.Kibana/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KibanaServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kibana_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kibana.Kibana",
	HandlerType: (*KibanaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Write",
			Handler:    _Kibana_Write_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kibana.proto",
}
